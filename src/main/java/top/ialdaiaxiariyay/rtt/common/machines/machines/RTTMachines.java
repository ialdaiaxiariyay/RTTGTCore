package top.ialdaiaxiariyay.rtt.common.machines.machines;

import top.ialdaiaxiariyay.rtt.api.registries.RTTRegistration;
import top.ialdaiaxiariyay.rtt.common.data.RTTCreativeModeTabs;

import com.gregtechceu.gtceu.GTCEu;
import com.gregtechceu.gtceu.api.machine.MultiblockMachineDefinition;
import com.gregtechceu.gtceu.api.pattern.FactoryBlockPattern;

import com.gto.gtocore.GTOCore;
import com.gto.gtocore.common.data.GTOBlocks;
import com.gto.gtocore.common.data.GTORecipeTypes;
import com.gto.gtocore.common.machine.multiblock.electric.smelter.DimensionallyTranscendentPlasmaForgeMachine;

import static com.gregtechceu.gtceu.api.machine.multiblock.PartAbility.MAINTENANCE;
import static com.gregtechceu.gtceu.api.pattern.Predicates.*;

public class RTTMachines {

    public static void init() {}

    static {
        RTTRegistration.REGISTRATE.creativeModeTab(() -> RTTCreativeModeTabs.MACHINES_ITEM);
    }

    public static final MultiblockMachineDefinition DIMENSIONALLY_TRANSCENDENT_PLASMA_FORGE_MK1 = RTTRegistration.REGISTRATE.multiblock("dimensionally_transcendent_plasma_forge_mk1", DimensionallyTranscendentPlasmaForgeMachine::new)
            .nonYAxisRotation()
            .recipe(GTORecipeTypes.DIMENSIONALLY_TRANSCENDENT_PLASMA_FORGE_RECIPES)
            .recipe(GTORecipeTypes.STELLAR_FORGE_RECIPES)
            .parallelizableTooltips()
            .customTooltipsBuilder(true, true, true)// 完美OC、激光和多配方功能。
            .parallelizablePerfectOverclock()
            .block(GTOBlocks.DIMENSIONALLY_TRANSCENDENT_CASING)
            .OPRecipeModifiers2()
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", "                                  ", "  A     A     A     A     A     A ", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", " ACA   ACA   ACA   ACA   ACA   ACA", "  A     A     A     A     A     A ", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", " ACA   ACA   ACA   ACA   ACA   ACA", "  A     A     A     A     A     A ", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", "                                  ", "                                  ", " AAA                           AAA")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", " BCB   BCB   BCB   BCB   BCB   BCB", " BCB   BCB   BCB   BCB   BCB   BCB", " BCB   BCB   BCB   BCB   BCB   BCB", " AAA   AAA   AAA   AAA   AAA   AAA", "  D     D     D     D     D     D ", " AAA   AAA   AAA   AAA   AAA   AAA", " BCB   BCB   BCB   BCB   BCB   BCB", " BCB   BCB   BCB   BCB   BCB   BCB", " BCB   BCB   BCB   BCB   BCB   BCB", " AAA   AAA   AAA   AAA   AAA   AAA", " CDCADACDCADACDCADACDCADACDCADACDC", " AAA   AAA   AAA   AAA   AAA   AAA", " BCB   BCB   BCB   BCB   BCB   BCB", " BCB   BCB   BCB   BCB   BCB   BCB", " BCB   BCB   BCB   BCB   BCB   BCB", " AAA   AAA   AAA   AAA   AAA   AAA", " CDCADACDCADACDCADACDCADACDCADACDC", " AAA   AAA   AAA   AAA   AAA   AAA", " BCB   BCB   BCB   BCB   BCB   BCB", " BCB   BCB   BCB   BCB   BCB   BCB", " BCB   BCB   BCB   BCB   BCB   BCB", " AAA   AAA   AAA   AAA   AAA   AAA", "  D     D     D     D     D     D ", "  A     A     A     A     A     A ", " ADAAAAADAAAAADAAAAADAAAAADAAAAADA")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", "                                  ", "  A     A     A     A     A     A ", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", " ACA   ACA   ACA   ACA   ACA   ACA", "  A     A     A     A     A     A ", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", "  CA   ACA   ACA   ACA   ACA   ACA", "  A     A     A     A     A     A ", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", "                                  ", "                                  ", " AAA  AAAAA   ADADADA   AAAAA  AAA")
                    .aisle(" AAA   AAA   AAA   AAA   AAA   AAA", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A    AAA     AAAAA     AAA    A ")
                    .aisle(" AAA   AAA   AAA   AAA   AAA   AAA", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  D     D     D     D     D     D ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  D     D     D     D     D     D ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A       AAA       A     A ")
                    .aisle(" AAA   AAA   AAA   AAA   AAA   AAA", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  AA    A      AAAAA      A    AA ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", " BBB    A     A     A     A    BBB", " BBB                           BBB", " BBB    A     A     A     A    BBB", "  A    BBB   BBB   BBB   BBB    A ", "       BBB   BBB   BBB   BBB      ", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A    BBB   BBB   BBB   BBB    A ", " ACA   BCB   BCB   BCB   BCB   ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A    BBB   BBB   BBB   BBB    A ", " ACA   BCB   BCB   BCB   BCB   ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A                             A ", "                                  ", "                                  ", "  AAA   A     AAAAAAA     A   AAA ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", " BCB   AAA   AAA   AAA   AAA   BCB", " BCB    D     D     D     D    BCB", " BCB   AAA   AAA   AAA   AAA   BCB", " AAA   BCB   BCB   BCB   BCB   AAA", "  D    BCB   BCB   BCB   BCB    D ", " AAA   BCB   BCB   BCB   BCB   AAA", " BCB    A     A     A     A    BCB", " BCB    D     D     D     D    BCB", " BCB    A     A     A     A    BCB", " AAA   BBB   BBB   BBB   BBB   AAA", " CDCADACCCADACCCADACCCADACCCADACDC", " AAA   BCB   BCB   BCB   BCB   AAA", " BCB    A     A     A     A    BCB", " BCB    D     D     D     D    BCB", " BCB    A     A     A     A    BCB", " AAA   BCB   BCB   BCB   BCB   AAA", " CDCADACCCADACCCADACCCADACCCADACDC", " AAA   BCB   BCB   BCB   BCB   AAA", " BCB    A     A     A     A    BCB", " BCB    A     A     A     A    BCB", " BCB    D     D     D     D    BCB", " AAA    D     D     D     D    AAA", "  D     A     A     A     A     D ", "  A     A     A     A     A     A ", "  DAAAAADAAAAAAADADAAAAAAADAAAAAD ")
                    .aisle("AAAAAAAAAA   AAAAAAAAA   AAAAAAAAA", " BBB    A     A     A     A    BBB", " BBB                           BBB", " BBB    A     A     A     A    BBB", "  A    BBB   BBB   BBB   BBB    A ", "       BBB   BBB   BBB   BBB      ", "  A    BBB   BBB   BBB   BBB    A ", " BBB                            BB", " BBB                            BB", " BBB                            BB", "  A    BBB   BBB   BBB   BB     A ", " ACA   BCB   BC    BCB   BC    ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A    BBB   BBB   BBB   BBB    A ", " ACA   BCB   BCB   BCB   BCB   ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A                             A ", "                                  ", "                                  ", "  AAA   A     AAAAAAA     A   AAA ")
                    .aisle(" AAA   AA     AACCCAA     AA   AAA", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  AA    A      AAAAA      A    AA ")
                    .aisle(" AAA   AA     CCCCCCC     AA   AAA", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  D     D     D     D     D     D ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  D     D     D     D     D     D ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A       AAA       A     A ")
                    .aisle(" AAA   AA    CCCCCCCCC    AA   AAA", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A        A        A     A ")
                    .aisle("AAAAAAAAAA  CCACCCCCACC  AAAAAAAAA", " BBB    A     A     A     A    BBB", " BBB                           BBB", " BBB    A     A     A     A    BBB", "  A    BBB   BBB   BBB   BBB    A ", "       BBB   BBB   BBB   BBB      ", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A     BB   BBB   BBB   BBB    A ", " ACA   BCB   BCB   BCB   BCB   ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A    BBB   BBB   BBB   BBB    A ", " ACA   BCB   BCB   BCB   BCB   ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A                             A ", "                                  ", "                                  ", "  A     A       AAA       A     A ")
                    .aisle("AAAAAAAAAAACCAAACCCAAACCAAAAAAAAAA", " BCB   AAA   AAA   AAA   AAA   BCB", " BCB    D     D     D     D    BCB", " BCB   AAA   AAA   AAA   AAA   BCB", " AAA   BCB   BCB   BCB   BCB   AAA", "  D    BCB   BCB   BCB   BCB    D ", " AAA   BCB   BCB   BCB   BCB   AAA", " BCB    A     A     A     A    BCB", " BCB    D     D     D     D    BCB", " BCB    A     A     A     A    BCB", " AAA   BBB   BBB   BBB   BBB   AAA", " CDCADACCCADACCCADACCCADACCCADACDC", " AAA   BCB   BCB   BCB   BCB   AAA", " BCB    A     A     A     A    BCB", " BCB    D     D     D     D    BCB", " BCB    A     A     A     A    BCB", " AAA   BCB   BCB   BCB   BCB   AAA", " CDCADACCCADACCCADACCCADACCCADACDC", " AAA   BCB   BCB   BCB   BCB   AAA", " BCB    A     A     A     A    BCB", " BCB    A     A     A     A    BCB", " BCB    D     D     D     D    BCB", " AAA    D     D     D     D    AAA", "  D     A     A     A     A     D ", "  A     A     A     A     A     A ", "  DA   AAA    AAAAAAA    AAA   AD ")
                    .aisle("AAAAAAAAAAACCCACAAACACCCAAAAAAAAAA", " BBB    A     A AAA A     A    BBB", " BBB                           BBB", " BBB    A     A     A     A    BBB", "  A    BBB   BBB   BBB   BBB    A ", "       BBB   BBB   BBB   BBB      ", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A    BBB   BBB   BBB   BBB    A ", " ACA   BCB   BCB   BCB   BCB   ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A    BBB   BBB   BBB   BBB    A ", " ACA   BCB   BCB   BCB   BCB   ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A                             A ", "                                  ", "                                  ", "  ADA AAAAA   A  A  A   AAAAA ADA ")
                    .aisle(" AAA   AAACCCCCAAAAACCCCCAAA   AAA", "               AAAAA              ", "                EEE               ", "                EEE               ", "                EEE               ", "                 A                ", "                                  ", "                 A                ", "                 F                ", "                 F                ", "                 F                ", "  A     A     A  F  A     A     A ", "                 F                ", "                 A                ", "                 F                ", "                 F                ", "                 F                ", "  A     A     A  F  A     A     A ", "                 F                ", "                 A                ", "                 F                ", "                 F                ", "                 F                ", "                 F                ", "                 F                ", "  AAAAAADAAA AA  A  AA AAADAAAAAA ")
                    .aisle(" AAA   AAACCCCCAAAAACCCCCAAA   AAA", "               AAAAA              ", "                EDE               ", "                EDE               ", "                EDA               ", "                ADA               ", "                 D                ", "                AAA               ", "                FCF               ", "                FCF               ", "                FCF               ", "  D     D     D FCF D     D     D ", "                FDF               ", "                AAA               ", "                FCF               ", "                FCF               ", "                FCF               ", "  D     D     D FCF D     D     D ", "                FDF               ", "                AAA               ", "                FCF               ", "                FCF               ", "                FCF               ", "                FCF               ", "                FDF               ", "  ADAAAAAAAAAAAAAAAAAAAAAAAAAAADA ")
                    .aisle(" AAA   AAACCCCCAAAAACCCCCAAA   AAA", "               AAAAA              ", "                EEE               ", "                E~E               ", "                EEE               ", "                 A                ", "                                  ", "                 A                ", "                 F                ", "                 F                ", "                 F                ", "  A     A     A  F  A     A     A ", "                 F                ", "                 A                ", "                 F                ", "                 F                ", "                 F                ", "  A     A     A  F  A     A     A ", "                 F                ", "                 A                ", "                 F                ", "                 F                ", "                 F                ", "                 F                ", "                 F                ", "  AAAAAADAAA AA  A  AA AAADAAAAAA ")
                    .aisle("AAAAAAAAAAACCCACAAACACCCAAAAAAAAAA", " BBB    A     A AAA A     A    BBB", " BBB                           BBB", " BBB    A     A     A     A    BBB", "  A    BBB   BBB   BBB   BBB    A ", "       BBB   BBB   BBB   BBB      ", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A    BBB   BBB   BBB   BBB    A ", " ACA   BCB   BCB   BCB   BCB   ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A    BBB   BBB   BBB   BBB    A ", " ACA    CB   BCB   BCB   BCB   ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A                             A ", "                                  ", "                                  ", "  ADA AAAAA   A  A  A   AAAAA ADA ")
                    .aisle("AAAAAAAAAAACCAAACCCAAACCAAAAAAAAAA", " BCB   AAA   AAA   AAA   AAA   BCB", " BCB    D     D     D     D    BCB", " BCB   AAA   AAA   AAA   AAA   BCB", " AAA   BCB   BCB   BCB   BCB   AAA", "  D    BCB   BCB   BCB   BCB    D ", " AAA   BCB   BCB   BCB   BCB   AAA", " BCB    A     A     A     A    BCB", " BCB    D     D     D     D    BCB", " BCB    A     A     A     A    BCB", " AAA   BBB   BBB   BBB   BBB   AAA", " CDCADACCCADACCCADACCCADACCCADACDC", " AAA   BCB   BCB   BCB   BCB   AAA", " BCB    A     A     A     A    BCB", " BCB    D     D     D     D    BCB", " BCB    A     A     A     A    BCB", " AAA   BCB   BCB   BCB   BCB   AAA", " CDCADACCCADACCCADACCCADACCCADACDC", " AAA   BCB   BCB   BCB   BCB   AAA", " BCB    A     A     A     A    BCB", " BCB    A     A     A     A    BCB", " BCB    D     D     D     D    BCB", " AAA    D     D     D     D    AAA", "  D     A     A     A     A     D ", "  A     A     A     A     A     A ", "  DA   AAA    AAAAAAA    AAA   AD ")
                    .aisle("AAAAAAAAAA  CCACCCCCACC  AAAAAAAAA", " BBB    A     A     A     A    BBB", " BBB                           BBB", " BBB    A     A     A     A    BBB", "  A    BBB   BBB   BBB   BBB    A ", "       BBB   BBB   BBB   BBB      ", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A    BBB   BBB   BBB   BBB    A ", " ACA   BCB   BCB   BCB   BCB   ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A    BBB   BBB   BBB   BBB    A ", " ACA   BCB   BCB   BCB   BCB   ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A                             A ", "                                  ", "                                  ", "  A     A       AAA       A     A ")
                    .aisle(" AAA   AA    CCCCCCCCC    AA   AAA", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A        A        A     A ")
                    .aisle(" AAA   AA     CCCCCCC     AA   AAA", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  D     D     D     D     D     D ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  D     D     D     D     D     D ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A       AAA       A     A ")
                    .aisle(" AAA   AA     AACCCAA     AA   AAA", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  AA    A      AAAAA      A    AA ")
                    .aisle("AAAAAAAAAA   AAAAAAAAA   AAAAAAAAA", " BBB    A     A     A     A    BBB", " BBB                           BBB", " BBB    A     A     A     A    BBB", "  A    BBB   BBB   BBB   BBB    A ", "       BBB   BBB   BBB   BBB      ", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A    BBB   BBB   BBB   BBB    A ", " ACA   BCB   BCB   BCB   BCB   ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A    BBB   BBB   BBB   BBB    A ", " ACA   BCB   BCB   BCB   BCB   ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A                             A ", "                                  ", "                                  ", "  AAA   A     AAAAAAA     A   AAA ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", " BCB   AAA   AAA   AAA   AAA   BCB", " BCB    D     D     D     D    BCB", " BCB   AAA   AAA   AAA   AAA   BCB", " AAA   BCB   BCB   BCB   BCB   AAA", "  D    BCB   BCB   BCB   BCB    D ", " AAA   BCB   BCB   BCB   BCB   AAA", " BCB    A     A     A     A    BCB", " BCB    D     D     D     D    BCB", " BCB    A     A     A     A    BCB", " AAA   BBB   BBB   BBB   BBB   AAA", " CDCADACCCADACCCADACCCADACCCADACDC", " AAA   BCB   BCB   BCB   BCB   AAA", " BCB    A     A     A     A    BCB", " BCB    D     D     D     D    BCB", " BCB    A     A     A     A    BCB", " AAA   BCB   BCB   BCB   BCB   AAA", " CDCADACCCADACCCADACCCADACCCADACDC", " AAA   BCB   BCB   BCB   BCB   AAA", " BCB    A     A     A     A    BCB", " BCB    A     A     A     A    BCB", " BCB    D     D     D     D    BCB", " AAA    D     D     D     D    AAA", "  D     A     A     A     A     D ", "  A     A     A     A     A     A ", "  DAAAAADAAAAAAADADAAAAAAADAAAAAD ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", " BBB    A     A     A     A    BBB", " BBB                           BBB", " BBB    A     A     A     A    BBB", "  A    BBB   BBB   BBB   BBB    A ", "       BBB   BBB   BBB   BBB      ", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A    BBB   BBB   BBB   BBB    A ", " ACA   BCB   BCB   BCB   BCB   ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A    BBB   BBB   BBB   BBB    A ", " ACA   BCB   BC    BCB   BC    ACA", "  A    BBB   BBB   BBB   BBB    A ", " BBB                           BBB", " BBB                           BBB", " BBB                           BBB", "  A                             A ", "                                  ", "                                  ", "  AAA   A     AAAAAAA     A   AAA ")
                    .aisle(" AAA   AAA   AAA   AAA   AAA   AAA", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  AA    A      AAAAA      A    AA ")
                    .aisle(" AAA   AAA   AAA   AAA   AAA   AAA", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  D     D     D     D     D     D ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  D     D     D     D     D     D ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A       AAA       A     A ")
                    .aisle(" AAA   AAA   AAA   AAA   AAA   AAA", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A     A     A     A     A     A ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "                                  ", "  A    AAA     AAAAA     AAA    A ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", "                                  ", "  A     A     A     A     A     A ", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", " ACA   ACA   ACA   ACA   ACA   ACA", "  A     A     A     A     A     A ", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", " ACA   ACA   ACA   ACA   ACA   ACA", "  A     A     A     A     A     A ", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", "                                  ", "                                  ", " AAA  AAAAA   ADADADA   AAAAA  AAA")
                    .aisle
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", "                                  ", "  A     A     A     A     A     A ", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", " ACA   ACA   ACA   ACA   ACA   ACA", "  A     A     A     A     A     A ", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", " ACA   ACA   ACA   ACA   ACA   ACA", "  A     A     A     A     A     A ", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", " BBB   BBB   BBB   BBB   BBB   BBB", "  A     A     A     A     A     A ", "                                  ", "                                  ", " AAA                           AAA")
                    .where('A', blocks(GTOBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get()))
                    .where('B', heatingCoils())
                    .where('C', blocks(GTOBlocks.DIMENSION_INJECTION_CASING.get()))
                    .where('D', blocks(GTOBlocks.DIMENSIONAL_BRIDGE_CASING.get()))
                    .where('E', blocks(GTOBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(MAINTENANCE).setExactLimit(1)))
                    .where('F', blocks(GTOBlocks.RHENIUM_REINFORCED_ENERGY_GLASS.get()))
                    .where('~', controller(blocks(definition.get())))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTOCore.id("block/casings/dimensionally_transcendent_casing"),
                    GTCEu.id("block/multiblock/dimensionally_transcendent_plasma_forge"))
            .register();
}
